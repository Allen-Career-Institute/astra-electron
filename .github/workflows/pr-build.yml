name: PR Build

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.9.2'
  NODE_ENV: stage
  ENV: stage
  STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
  PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
  CUSTOM_URL: ${{ secrets.CUSTOM_CONSOLE_URL }}
  ASTRA_ELECTRON_SENTRY_DSN: ${{ secrets.ASTRA_ELECTRON_SENTRY_DSN }}
  ASTRA_ELECTRON_SENTRY_ENDPOINT: ${{ secrets.ASTRA_ELECTRON_SENTRY_ENDPOINT }}

# Cancel in-progress jobs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Check permissions first
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      has-permissions: ${{ steps.perms.outputs.level }}
    steps:
      - name: Check repository permissions
        id: perms
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permissions } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            core.setOutput('level', permissions.permission);
            console.log(`User ${context.actor} has ${permissions.permission} permission`);

  build:
    runs-on: windows-latest
    timeout-minutes: 45
    # Only run if not a fork and user has write access
    if: |
      !github.event.pull_request.head.repo.fork && 
      contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)
    needs: check-permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env.local file
        run: |
          # Read version from package.json and create APP_VERSION
          $APP_VERSION = (Get-Content package.json | ConvertFrom-Json).version
          echo "ENV=${{ env.ENV }}" > .env.local
          echo "NODE_ENV=${{ env.NODE_ENV }}" >> .env.local
          echo "STAGE_URL=${{ env.STAGE_URL }}" >> .env.local
          echo "PROD_URL=${{ env.PROD_URL }}" >> .env.local
          echo "CUSTOM_URL=${{ env.CUSTOM_URL }}" >> .env.local
          echo "DEV_URL=${{ env.DEV_URL }}" >> .env.local
          echo "APP_VERSION=$APP_VERSION" >> .env.local
          echo "ASTRA_ELECTRON_SENTRY_DSN=${{ env.ASTRA_ELECTRON_SENTRY_DSN }}" >> .env.local
          echo "ASTRA_ELECTRON_SENTRY_ENDPOINT=${{ env.ASTRA_ELECTRON_SENTRY_ENDPOINT }}" >> .env.local
          echo "Created .env.local file with environment variables:"
          cat .env.local

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable
        timeout-minutes: 10
    
      - name: Test environment variables
        run: yarn test:env
        timeout-minutes: 2
        env:
          NODE_ENV: ${{ env.NODE_ENV }}
          ENV: ${{ env.ENV }}
          STAGE_URL: ${{ env.STAGE_URL }}
          PROD_URL: ${{ env.PROD_URL }}
          CUSTOM_URL: ${{ env.CUSTOM_URL }}
          DEV_URL: ${{ env.DEV_URL }}
          ASTRA_ELECTRON_SENTRY_DSN: ${{ env.ASTRA_ELECTRON_SENTRY_DSN }}

      - name: Build Windows
        run: yarn build:win-nsis
        timeout-minutes: 10

      - name: Cleanup build artifacts
        run: Remove-Item -Recurse -Force "dist-electron-builder\win-unpacked" -ErrorAction SilentlyContinue
        timeout-minutes: 5

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        timeout-minutes: 5
        with:
          name: astra-win32-x64-pr-${{ github.event.number }}
          path: |
            dist-electron-builder/
            !dist-electron-builder/**/*.blockmap
          retention-days: 1

      - name: Create build summary
        run: |
          echo "## Build Summary for PR #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms:** Windows (x64 only) - NSIS Installer" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status:** âœ… Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Tool:** Electron Builder" >> $GITHUB_STEP_SUMMARY
          echo "- **Package Type:** NSIS (Windows Installer)" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts:** Available for download above" >> $GITHUB_STEP_SUMMARY
          echo "- **Retention:** 1 day" >> $GITHUB_STEP_SUMMARY
